# This workflow will run an npm build, and build a docker image. The Docker 
# image is pushed to docker hub. 

name: NPM build and Docker image
on: 
  workflow_call:
    inputs:
      npmScript: 
        description: 'NPM script to run'
        required: false
        default: 'build'
        type: string        
      buildDockerImage: 
        description: Determines whether the job should build and push a Docker image
        required: false 
        type: boolean
        default: true
      incrementVersion: 
        description: Determines whether npm should increment the version
        required: false 
        type: boolean
        default: false
      npmRunVersionArgs: 
        description: Arguments for npm version
        required: false 
        type: string
        default: "patch"
    outputs:
      package: 
        description: npm package name
        value: ${{ jobs.build.outputs.package }}
      version: 
        description: npm package version
        value: ${{ jobs.build.outputs.version }}
    secrets:
      DOCKER_USERNAME: 
        required: false
      DOCKER_PASSWORD: 
        required: false

jobs:
  build: 
    name: Build
    outputs:
      package: ${{ steps.buildVars.outputs.package }}
      version: ${{ steps.buildVars.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 
        uses: actions/setup-node@v2
        with:
          #node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - name: Set Git User
        run: |
          git config user.name "$GITHUB_ACTOR - RELEASE BUILD"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Get Build and Release Version
        id: buildVars
        run: |
          export package=`cat package.json | jq -r '.name'`
          export version=`cat package.json | jq -r '.version'`
          echo "::set-output name=package::$package"
          echo "::set-output name=version::$version"
      - name: Log in to Docker Hub
        if: ${{ inputs.buildDockerImage }}
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        if: ${{ inputs.buildDockerImage }}
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ github.repository_owner }}/${{ steps.buildVars.outputs.artifact }}:${{ steps.buildVars.outputs.version }}
      - name: Increment Version
        if: ${{ inputs.incrementVersion }}
        run: npm version ${{ inputs.npmRunVersionArgs }}
