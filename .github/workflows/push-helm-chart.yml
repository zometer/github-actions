name: Push Helm chart to GitHub repo

on:
  workflow_call:
    inputs:
      helmChartRepo: 
        description: 'Helm Chart Repository'
        required: true
        default: 'zometer/helm-charts'
        type: string
      helmChartRepoBranch: 
        description: 'Helm chart index branch'
        required: true
        default: 'gh-pages'
        type: string
      artifactName: 
        description: 'name of workflow artifact with helm chart'
        required: true
        default: 'helm-chart'
        type: string
      chartName: 
        description: 'name of application to deploy'
        required: true
        type: string
      chartVersion: 
        description: 'version of application to deploy'
        required: true
        type: string
    secrets:
      githubToken:
        required: true

jobs:
  release-helm-chart:
    name: Release Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Init
        run: |
          pwd          
          echo "artfactName: ${{ inputs.artifactName }}"
          echo "chartName: ${{ inputs.chartName }}"
          echo "chartVersion: ${{ inputs.chartVersion }}"
          echo "helmChartRepo: ${{ inputs.helmChartRepo }}"
          echo "helmChartRepoBranch: ${{ inputs.helmChartRepoBranch }}"
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: ${{ inputs.artifactName }}
      - name: Prepare Deployment
        id: prep-helm-deploy
        run: | 
          ls -l ./ 
          tar zxvf $ARTIFACT-$VERSION.tgz
          export description=$(cat $ARTIFACT/Chart.yaml| yq e '.description' - | sed -e s/\"//g) 
          echo "desc: $description"
          echo "::set-output name=description::$description"
        env: 
          ARTIFACT: ${{inputs.chartName}}
          VERSION: ${{inputs.chartVersion}}
      - name: Create Release With Asset
        id: Release-AIO
        if: ${{ false }}
        uses: Hs1r1us/Release-AIO@v1.0
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
        with:
          tag_name: ${{inputs.chartName}}-${{inputs.chartVersion}}
          body: ${{ steps.prep-helm-deploy.outputs.description }}
          asset_files: ${{inputs.chartName}}-${{inputs.chartVersion}}.tgz
          repo: ${{inputs.helmChartRepo}}
  update-helm-index:
    name: Update Helm Index 
    runs-on: ubuntu-latest
    needs: release-helm-chart
    env: 
      HELM_CHART_REPO: ${{inputs.helmChartRepo}}
    steps: 
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: ${{ inputs.artifactName }}
      - name: Init Update Helm Index
        id: init-update-helm-index
        run: |
          mkdir -p $(pwd)/git-repos
          ls -la 
          echo "::set-output name=chartDir::$(pwd)"
          echo "::set-output name=gitRepoDir::$(pwd)/git-repos"
      - name: Checkout Helm Chart Repo
        id: checkout-helm-repo
        run: |
          cd $GIT_REPO_DIR/
          pwd
          ls -la
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY_OWNER}/${HELM_CHARTS_GIT_REPO}
          cd ${HELM_CHARTS_GIT_REPO}
          git config user.name "$GITHUB_ACTOR - RELEASE BUILD"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git checkout gh-pages
          ls -la
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
          CHART_DIR: ${{ steps.init-update-helm-index.outputs.chartDir }}
          GIT_REPO_DIR: ${{ steps.init-update-helm-index.outputs.gitRepoDir }}
          HELM_CHARTS_GIT_REPO: helm-charts
      - name: Generate Updated index.yaml
        id: update-helm-repo-index
        run: |
          cd $CHART_DIR
          pwd
          ls -la
          export CHART_DOWNLOAD_URL="https://github.com/${GITHUB_REPOSITORY_OWNER}/${HELM_CHARTS_GIT_REPO}/releases/download/${ARTIFACT}-${VERSION}"
          echo "helm repo index --url $CHART_DOWNLOAD_URL --merge $GIT_REPO_DIR/${HELM_CHARTS_GIT_REPO}/index.yaml ."
          helm repo index --url $CHART_DOWNLOAD_URL --merge $GIT_REPO_DIR/${HELM_CHARTS_GIT_REPO}/index.yaml .
          cat index.yaml
          mv index.yaml $GIT_REPO_DIR/$HELM_CHARTS_GIT_REPO
        env:
          ARTIFACT: ${{inputs.chartName}}
          VERSION: ${{inputs.chartVersion}}
          CHART_DIR: ${{ steps.init-update-helm-index.outputs.chartDir }}
          GIT_REPO_DIR: ${{ steps.init-update-helm-index.outputs.gitRepoDir }}
          HELM_CHARTS_GIT_REPO: helm-charts
      - name: Push Helm Chart Repo
        id: push-helm-repo
        run: |
          cd $GIT_REPO_DIR/$HELM_CHARTS_GIT_REPO
          ls -la
          git add index.yaml
          git status 
          git commit -m "Updating index.yaml: ${ARTIFACT}-${VERSION}"
          git push
        env:
          ARTIFACT: ${{needs.build.outputs.ARTIFACT}}
          VERSION: ${{needs.build.outputs.VERSION}}
          GITHUB_TOKEN: ${{ secrets.HELM_CHARTS_REPO_TOKEN }}
          CHART_DIR: ${{ steps.prep-helm-deploy.outputs.CHART_DIR }}
          GIT_REPO_DIR: ${{ steps.prep-helm-deploy.outputs.GIT_REPO_DIR }}
          HELM_CHARTS_GIT_REPO: helm-charts

